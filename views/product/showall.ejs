<!--
Panel for displaying products in an editable table.

Requires: "cogroup" object.

Reviewed: 2015, Sep 14
-->
<div id="products panel" class="panel panel-success" data-bind="with: productsVM">
    <div class="panel-heading">
        <div class="panel-title">
            <div class="row">
                <div class="col-xs-6">
                    <h2><strong>產品 / 服務</strong></h2>
                </div>
                <div class="col-xs-6 text-right">
                    <button class="btn btn-custom btn-lg" data-bind="click: toggleVerbose, css: {active: verbose_product_info}">顯示更多</button>
                </div>
            </div>
        </div>
    </div>
    <div class="panel-body" style="padding: 0px">
        <table class="table table-condensed table-striped">
            <thead class="text-uppercase">
                <tr>
                    <th class="hidden-xs" data-bind="visible: verbose_product_info">順序</th>
                    <th>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-sm-8 text-center">
                                        品名 :
                                        <abbr title="# of kg, L, gal per container">容量</abbr> -
                                        <abbr title="kg, L, gal, etc.">單位</abbr> /
                                        <abbr title="桶, 包, 瓶, 等...">容器</abbr>
                                    </div>
                                    <div class="col-sm-4 text-center">
                                        價格
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-sm-6 text-center">
                                        <span data-bind="visible: verbose_product_info">英文品名 / </span>包裝描述
                                    </div>
                                    <div class="col-sm-6 text-center">
                                        備註
                                    </div>
                                </div>
                            </div>
                        </div>
                    </th>
                    <th>活性</th>
                    <th class="hidden-xs">修改</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: products">
                <tr>
                    <td class="hidden-xs" style="width: 36px" data-bind="visible: $parent.verbose_product_info">
                        <div class="btn-group-vertical btn-group-sm" data-bind="visible: locked()">
                            <button class="btn btn-custom" data-bind="click: $parent.productUpOne"><i class="glyphicon glyphicon-triangle-top"></i>
                            </button>
                            <button class="btn btn-custom" data-bind="click: $parent.productDownOne"><i class="glyphicon glyphicon-triangle-bottom"></i>
                            </button>
                        </div>
                    </td>
                    <!--        Product inventory name    -->
                    <td style="width: 84%" data-bind="style: {backgroundColor: discontinued() ? '#b0b0b0' : null}">
                        <div class="row-fluid">
                            <div class="col-md-6" style="padding: 0px 2px">
                                <div class="row-fluid">
                                    <div class="col-sm-8" style="padding: 0px 2px">
                                        <button class="btn btn-custom" style="width: 100%; padding: 2px 10px; font-size: 16px" data-bind="click: $parent.editProduct">
                                            <div class="row-fluid">
                                                <div class="col-xs-7 text-left" style="padding: 0px">
                                                    <span class="fa fa-fw"
                                                          data-bind="css: {'fa-ambulance': is_supply, 'fa-truck fa-flip-horizontal': !is_supply()}">
                                                    </span>&nbsp;
                                                    <strong data-bind="text: inventory_name"></strong>
                                                </div>
                                                <div class="col-xs-5 text-right" style="padding: 0px; height: 22px">

                                                    <strong data-bind="text: units, visible: SKU() != '槽車'"></strong>
                                                    <strong data-bind="text: UM, visible: SKU() != '槽車'"></strong>
                                                    <strong data-bind="visible: SKU() != '槽車'">/</strong>
                                                    <strong data-bind="text: SKU, visible: ['槽車','包','桶'].indexOf(SKU()) === -1"></strong>
                                                    <img alt="sack" src="/fonts/sack.svg" height="20" style="position: relative; top:0px"
                                                         data-bind="visible: SKU() == '包'">
                                                    <img alt="jerrycan" src="/fonts/jerrycan.svg" height="20" style="position: relative; top:0px"
                                                         data-bind="visible: SKU() == '桶' && units() < 100">
                                                    <img alt="barrel" src="/fonts/barrel.svg" height="22" style="position: relative; top:-1px"
                                                         data-bind="visible: SKU() == '桶' && units() >= 100">
                                                    <img class="fa-flip-horizontal" alt="tanker" src="/fonts/tanker.svg" height="40" style="position: relative; top:-10px"
                                                         data-bind="visible: SKU() == '槽車'">
                                                </div>
                                            </div>
                                        </button>
                                        <div class="input-group" data-bind="visible: $parent.verbose_product_info">
                                            <div class="input-group-addon">標籤</div>
                                            <input class="form-control" placeholder="標籤(選修的)" style="width: 100%;" data-bind="textInput: product_label">
                                        </div>
                                    </div>
                                    <div class="col-sm-4" style="padding: 0px 2px">


                                        <div class="input-group">
                                            <div class="input-group-addon">
                                                <span data-bind="visible: unitpriced()">1 <span data-bind="text: UM"></span> = <span class="glyphicon glyphicon-usd"></span></span>
                                                <span data-bind="visible: !unitpriced()">1 <span data-bind="text: SKU"></span> = <span class="glyphicon glyphicon-usd"></span></span>
                                            </div>
                                            <input class="form-control" size="4" placeholder="目前價格" data-bind="textInput: curr_price">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6" style="padding: 0px 2px">
                                <div class="row-fluid">
                                    <div class="col-sm-6" style="padding: 0px 2px">
                                        <div class="input-group" data-bind="visible: $parent.verbose_product_info">
                                            <div class="input-group-addon">英文</div>
                                            <input class="form-control" placeholder="英文品名" style="width: 100%;" data-bind="textInput: english_name">
                                        </div>
                                        <div class="input-group">
                                            <div class="input-group-addon">包裝</div>
                                            <input class="form-control" placeholder="包裝描述" style="width: 100%;" data-bind="textInput: SKUlong">
                                        </div>
                                    </div>
                                    <div class="col-sm-6" style="padding: 0px 2px">
                                        <input class="form-control" placeholder="note" style="width: 100%;" data-bind="textInput: note">
                                        <div class="input-group" data-bind="visible: $parent.verbose_product_info">
                                            <input class="form-control" placeholder="PN (ASE)" style="width: 50%;" data-bind="textInput: ASE_PN">
                                            <input class="form-control" placeholder="RT (ASE)" style="width: 50%;" data-bind="textInput: ASE_RT">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>

                    <!--        Product Manifest Availability    -->
                    <td style="width: 4%" data-bind="style: {backgroundColor: discontinued() ? '#b0b0b0' : null}">
                        <button class="btn btn-custom btn-sm" data-bind="click: $parent.toggleActive, html: toggleMessage, visible: locked()"></button>
                    </td>

                    <td class="hidden-xs"
                        data-bind="style: {backgroundColor: discontinued() ? '#b0b0b0' : null}">
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-primary" data-bind="click: $parent.saveProduct, disable: saved"><span class="glyphicon glyphicon-save"></span>
                            </button>
                            <button class="btn btn-danger" data-bind="click: $parent.removeProduct, enable: saved"><span class="glyphicon glyphicon-trash"></span>
                            </button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="panel-footer lightorange-blend text-center">
        <button class="btn btn-lg darkgreen-blend" data-bind="enable: productsAllSaved(), click: addProduct">Add product</button>
    </div>
</div>

<%- partial ('../product/modal.ejs') %>

<script>
var viewModel = viewModel || {};
var co_name = viewModel.co_name = '<%= cogroup.name %>';
var _csrf = viewModel._csrf = '<%= _csrf %>';

function ProductsVM() {
    var self = this;

    // Control summary/full display of product information.
    self.verbose_product_info = ko.observable(false);
    self.toggleVerbose = function() {
        self.verbose_product_info(!self.verbose_product_info());
    };

    self.products = ko.observableArray();
    self.productsAllSaved = ko.computed(function () {
        for (var i=0; i<self.products().length; i++) {
            if (self.products()[i].saved() === false) return false;
        }
        return true;
    });
    self.toggleActive = function(product) {
        product.discontinued(!product.discontinued());

        var index = self.products().indexOf(product);
        self.productsUpdate(self.products.slice(index, index+1));
    }
    self.addProduct = function() {
        viewModel.productModalVM.new(co_name, self.productsGet);
    };
    self.editProduct = function(product) {
        viewModel.productModalVM.edit(product.MPN(), self.productsGet);
    };
    self.removeProduct= function(product) {
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function() {
            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                var response = JSON.parse(xmlhttp.response);
                console.log(typeof response, response);
                if (response.status !== 400 && response.group === co_name) {
                    product.MPN(null);
                    product.saved(false);
                    self.products.remove(product);
                } else {
                    alert(JSON.stringify(response, null, '  '));
                }
            }
        };
        xmlhttp.open('POST', '/product/destroy', true);
        xmlhttp.setRequestHeader('Content-type', 'application/json');
        xmlhttp.send(ko.toJSON({
            _csrf: _csrf,
            co_name: co_name,
            MPN: product.MPN
        }));
    };

    self.saveProduct = function(product) {
        console.log('SAVEPRODUCT', co_name, ko.toJSON(product));
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function() {
            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
                var response = JSON.parse(xmlhttp.response);
                console.log(typeof response, response);
                if (response.status !== 400 && response.group === co_name) {
                    product.MPN(response.MPN);
                    product.saved(true);
                    product.locked(true);
                } else {
                    alert(JSON.stringify(response, null, '  '));
                }
            }
        };
        xmlhttp.open('POST', '/product/updateOrCreate', true);
        xmlhttp.setRequestHeader('Content-type', 'application/json');
        xmlhttp.send(ko.toJSON({
            _csrf: _csrf,
            co_name: co_name,
            product: product
        }));
    };

    self.productsGet = function () {
        params = {
            _csrf: _csrf,
            id: co_name,
        };

        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState !== 4) return;
            var db_records = JSON.parse(xmlhttp.response);
            // Sort by rank value.
            db_records.sort(function (a, b) {
                return a.json.rank - b.json.rank;
            });
            self.products.removeAll();
            for (var i=0; i<db_records.length; i++) {
                self.products.push(new KO_Product(db_records[i]));
            }
        };
        xmlhttp.open('POST', '/product/get', true);
        xmlhttp.setRequestHeader('Content-type', 'application/json');
        xmlhttp.send(ko.toJSON(params));
    };

    self.productsGet();

    // Sort products by rank value (in json data).
    self.productsSort = function () {
        self.products.sort(function (a, b) {
            return a.json().rank - b.json().rank;
        });
    }

    self.productUpOne = function (prod) {
        var index = self.products().indexOf(prod);
        if (index > 0) {
            var temp = self.products()[index].json().rank;
            self.products()[index].json().rank = self.products()[index-1].json().rank;
            self.products()[index-1].json().rank = temp;
        }
        self.productsSort();
        self.productsUpdate(self.products.slice(index-1, index+1));
    };
    self.productDownOne = function (prod) {
        var index = self.products().indexOf(prod);
        if (index < self.products().length-1) {
            var temp = self.products()[index].json().rank;
            self.products()[index].json().rank = self.products()[index+1].json().rank;
            self.products()[index+1].json().rank = temp;
        }
        self.productsSort();
        self.productsUpdate(self.products.slice(index, index+2));
    };

    self.productsUpdate = function (prods) {
        // Verify product rank numbers and update all products if incorrect.
        for (var i=0; i<self.products().length; i++) {
            if (self.products()[i].json().rank !== i) {
                prods = self.products;
                self.products()[i].json().rank = i;
            }
        }

        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function() {
            if (xmlhttp.readyState !== 4) return;

        };
        xmlhttp.open('POST', '/product/merge', true);
        xmlhttp.setRequestHeader('Content-type', 'application/json');
        xmlhttp.send(ko.toJSON({
            _csrf: _csrf,
            id: co_name,
            products: prods
        }));
    };
}

viewModel.productsVM = new ProductsVM();
//viewModel.productsVM.verbose_product_info("false");

</script>
