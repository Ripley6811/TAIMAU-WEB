<div class="panel panel-success" style="height: 100%; margin: 0px" data-bind="with: AnalysisVM">
    <div class="panel-heading">
        <div class="panel-title">
            <h2><strong>Analysis</strong></h2>
        </div>
    </div>
    <div class="panel-body">
        <div class="row">
            <!-- SELECTION AREA -->
            <div class="col-md-5" style="height: 600px">
                <label>新分析項目</label>
                <div class="input-group">
                    <select class="form-control"
                            style="background-color: #eef"
                            data-bind="options: product_options_koa,
                                       optionsText: 'optionsText',
                                       value: product_list_selection">
                    </select>
                    <span class="input-group-btn">
                        <button class="btn btn-primary"
                                data-bind="click: addProcess">
                            <i class="fa fa-plus"></i>
                        </button>
                    </span>
                </div>

                <label>產成品分析</label>
                <div data-bind="foreach: processes_koa">
                    <div class="btn-group btn-group-sm">
                        <button type="button" class="btn btn-custom"
                                data-bind="click: $parent.showProcess">
                            <strong data-bind="text: process_title"></strong>
                        </button>
                        <button type="button" class="btn"
                                data-bind="css: total_gain() >= 0 ? 'btn-success' : 'btn-danger', click: $parent.showProcess">
                            <strong data-bind="text: (total_gain() > 0 ? '+' : '') + total_gain()"></strong>
                        </button>
                        <button type="button" class="btn btn-danger"
                                data-bind="click: $parent.removeProcess">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
<!--
                    <tbody data-bind="foreach: processes_koa">
                        <tr data-bind="click: $parent.selectProcess">
                            <td>
                                <div data-bind="foreach: materials_koa">
                                    <select class="form-control"
                                            style="background-color: #fdd"
                                            data-bind="options: $root.AnalysisVM.material_options_koa,
                                                       optionsText: 'optionsText',
                                                       value: selected_product">
                                    </select>


                                </div>
                                <div><a href='#' data-bind='click: $parent.removeProcess'>Delete All</a></div>
                                <div><a href='#' data-bind='click: $parent.addMaterial'>Add</a></div>
                                <div><a href='#' data-bind='click: $parent.removeMaterial'>Remove</a></div>
                            </td>
                            <td>
                                <div class="input-group" data-bind="with: product">
                                    <span class="input-group-addon">$</span>
                                    <input data-bind="textInput: SKU_price">
                                </div>
                                <div data-bind="foreach: materials_koa">


                                </div>
                                <div><a href='#' data-bind='click: $parent.removeProcess'>Delete All</a></div>
                                <div><a href='#' data-bind='click: $parent.addMaterial'>Add</a></div>
                                <div><a href='#' data-bind='click: $parent.removeMaterial'>Remove</a></div>
                            </td>
                            <td data-bind="text: total_gain"></td>
                        </tr>
                    </tbody>
                </table>
-->

            </div>

            <div class="col-md-7">
                <!-- GRAPH AREA -->
                <div id="graph-div" style="position: fixed; top: 100px">

                    <div class="panel panel-warning">
                        <div class="panel-heading">
                            <h3 data-bind="text: selectedProcessRecord().process_title"></h3>
                        </div>
                        <div class="panel-body">
                            <label>原料選擇</label>
                            <div class="input-group">
                                <select class="form-control"
                                        style="background-color: #fee"
                                        data-bind="options: material_options_koa,
                                                   optionsText: 'optionsText',
                                                   value: material_list_selection">
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-primary"
                                            data-bind="click: addMaterial">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                </span>
                            </div>
                            <label>需要的原料</label>
                            <div data-bind="with: selectedProcessRecord">
                                <div data-bind="foreach: materials_koa">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-addon"
                                              data-bind="text: name">
                                        </span>
                                        <input type="text" data-bind="textInput: SKU_price">
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <svg class="barchart"></svg>
                                <svg class="piechart"></svg>
                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>


    </div>
</div>
<script>
var viewModel = viewModel || {};


/**
 * KnockoutJS Model for a Product data used in a Process.
 * @param   {Object}   obj [[Description]]
 * @returns {[[Type]]} [[Description]]
 */
function ProcessProductVM(obj) {
    'use strict';
    var self = this,
        obj = obj || {};

    /**
     * KO OBSERVABLES
     */
    self.id = ko.observable(obj.id || null);
    self.SKU_qty = ko.observable(obj.qty || 1);  // SKU (*units)

    self.name = ko.observable(null);
    self.isRaw = null;  //ko.observable(null);
    self.units = ko.observable(null);
    self.UM = ko.observable(null);
    self.SKU = ko.observable(null);
    self.SKU_price = ko.observable(null);  // Per SKU

//    self.selected_product = ko.observable();
//    ko.computed(function () {
//        if (self.selected_product()) {
//            self.id(self.selected_product().id);
//        }
//    });

    /**
     * KO COMPUTED
     */
    self.qty_units = ko.computed(function () {return self.SKU_qty() * self.units()});
    // Return negative total for supply and positive total for final product
    self.cost = ko.computed(function () {
        return self.SKU_price() * self.SKU_qty() * (self.isRaw ? -1 : 1);
    });

    // Retrieve current price and data for product id.
    ko.computed(function () {
        if (self.id() !== null) {
            // AJAJ request for product record
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState !== 4) return;
                console.log(xmlhttp);
                if (!xmlhttp.response) {
                    alert("Response is empty");
                    return;
                }

                var res = JSON.parse(xmlhttp.response);

                self.name(res.inventory_name);
                self.isRaw = res.is_supply;
                self.units(res.units);
                self.UM(res.UM);
                self.SKU(res.SKU);
                self.SKU_price(res.curr_price * (res.unitpriced ? res.units : 1));
                console.log(self);
            };
            xmlhttp.open('GET', '/product/getId/'+self.id(), true);
            xmlhttp.send();
        }
    });
}


/**
 * KnockoutJS Model for a process (raw material to final product data).
 * @param   {Object}   obj Optional preset data.
 */
function ProcessVM(obj) {
    'use strict';
    if (!obj) return null;

    var self = this;

    self.process_title = obj.title || null;
    self.product = new ProcessProductVM({id: obj.product_id});

    /**
     * KO OBSERVABLES
     */
    self.materials_koa = ko.observableArray();
//    self.buyer = ko.observable(obj.buyer || null);
    self.batches = ko.observable(1);
    self.hours_per_finished_qty = ko.observable(null);
    self.other_cost_per_prod_sku = ko.observable(null);

    /**
     * KO COMPUTED
     */
    self.finished_qty = ko.computed(function () {
        self.product.SKU_qty();
    });

    self.total_gain = ko.computed(function () {
        console.log(self.product.cost());
        var total = self.product.cost(),
            pkoa = self.materials_koa();

        for (var i=0; i<pkoa.length; i++) {
            total += pkoa[i].cost;
        }
        if (self.other_cost_per_prod_sku() !== null) {
            total -= self.other_cost_per_prod_sku() * self.finished_qty;
        }
        return Math.round(total * self.batches());
    });

    self.finished_batches_qty = ko.computed(function () {
        return self.finished_qty * self.batches();
    });
}


/**
 * View Model for this page
 */
viewModel.AnalysisVM = new (function () {
    'use strict';
    var self = this;

    // List of finished goods (id, optionsText, isRaw)
    self.product_options_koa = ko.observableArray();
    // List of raw goods (id, optionsText, isRaw)
    self.material_options_koa = ko.observableArray();
    //Load product options into product and material lists.
    (function () {
        // AJAJ request for all product records
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState !== 4) return;

            var res = JSON.parse(xmlhttp.response);
            if (res.status == 500) {
                alert(res.summary);
                console.log(res);
            }

            res.forEach(function(product) {
                if (product.isRaw) {
                    self.material_options_koa.push(product);
                } else {
                    self.product_options_koa.push(product);
                }
            });
        };
        xmlhttp.open('GET', '/product/options', true);
        xmlhttp.send();
    })();



    // Store saved processes
    self.processes_koa = ko.observableArray();

    // Selected option in finished goods list
    self.product_list_selection = ko.observable();

    // Selected option in raw goods list
    self.material_list_selection = ko.observable();


    self.addProcess = function () {
        var s_prod = self.product_list_selection()
        self.processes_koa.push(
            new ProcessVM({
                title: s_prod.optionsText,
                product_id: s_prod.id
            })
        );
    };

    self.removeProcess = function (item) {
        self.processes_koa.remove(item);
    };

    self.addMaterial = function (item) {
        console.log(item);
        self.selectedProcessRecord().materials_koa.push(
            new ProcessProductVM({id: item.id})
        );
    };

    self.removeMaterial = function (item) {
        self.selectedProcessRecord().materials_koa.remove(item);
    };


    self.save = function() {
        JSON.stringify(ko.toJS(self.contacts), null, 2);
    };

    // Reference to the currently selected process
    self.selectedProcessRecord = ko.observable(new ProcessVM());

    /**
     * Show the selected process in the right pane.
     * @param {Object} item Selected item.
     */
    self.showProcess = function (item) {
        console.log('showProcess', item);
        self.selectedProcessRecord(item);
    };




});
</script>
