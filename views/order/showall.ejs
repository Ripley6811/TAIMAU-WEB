<!--Table view of all POs ordered by order date-->
<div id="thisPage" class="container-fluid">
<!--vvv START: Company header and buttons vvv-->
<%- partial ('../company_header.ejs') %>
<!--^^^ END: Company header and buttons ^^^-->
    
    
    
    
	<hr>


<div class="panel panel-success">
<div class="panel-heading">
    <h3 class="panel-title">
        <strong>訂單紀錄</strong>
    </h3>
</div>
<div class="panel-body" style="padding: 0px">
<table class="table table-condensed table-striped">
    <thead class="text-uppercase">
        <tr>
            <th></th>
            <th>訂單編號</th>
            <th class="text-center">使用中</th>
            <th>標籤品名</th>
            <th class="text-center">價格</th>
            <th class="text-center">訂單數量</th>
            <th class="text-center">已出數量</th>
            <th class="text-center">行程數</th>
            <th class="text-center">訂單日期</th>
            <th>備註</th>
        </tr>
    </thead>
    
    <tbody data-bind="foreach: orders">
        <tr>
            <td>
                <a data-bind="attr: {href: '/order/show/' + id}" class="btn btn-xs btn-custom"><span class="glyphicon glyphicon-eye-open"></span></a>
            </td>
            
            <td>
                <span class="badge" data-bind="text: id"></span> <span data-bind="text: orderID"></span>
            </td>
            
<!--        Order open/close toggle    -->
            <td style="width: 5%" class="text-center">
                <button class="btn btn-custom btn-xs" data-bind="click: $parent.toggleActive, visible: numberOfShipments > 0, html: toggleMessage"></button>
                <div class="btn-group" data-bind="visible: numberOfShipments == 0">
                    <button class="btn btn-custom btn-xs" data-bind="click: $parent.toggleActive, html: toggleMessage"></button>
                    <button class="btn btn-danger btn-xs" data-bind="click: $parent.removeOrder"><span class="glyphicon glyphicon-trash"></span></button>
                </div>
            </td>
            
<!--        Product label    -->
            <td>
                <span data-bind="text: label"></span>
            </td>
            <td class="text-center">
                $ <span data-bind="text: price"></span>
            </td>
            
<!--        Quantities    -->
            <td class="text-right">
                <span data-bind="text: qty"></span>
            </td>
            <td class="text-right">
                <span data-bind="text: qty_shipped"></span>
            </td>
            <td class="text-left">
                (<span data-bind="text: numberOfShipments"></span> <span class="glyphicon glyphicon-shopping-cart"></span>)
            </td>
            
            <td class="text-center">
                <span data-bind="text: orderdate"></span>
            </td>
            <td>
                <span data-bind="text: ordernote"></span>
            </td>
            
        </tr>
    </tbody>
</table>
</div>
    <div class="panel-footer lightorange-blend">
<div class="row">
    <div class="col-md-12">
        <div class="btn-group">
            <a class="btn btn-custom" data-bind="click: function () { page(1) }, attr: {disabled: page() == 1 ? true : false}"><span class="glyphicon glyphicon-step-backward"></span></a>
            <a class="btn btn-custom" data-bind="click: function () { page(page()-1) }, attr: {disabled: page() == 1 ? true : false}"><span class="glyphicon glyphicon-triangle-left"></span></a>
        </div>
        <div class="btn-group" data-bind="foreach: availablePages">
            <a class="btn btn-custom" data-bind="click: function () { $parent.page(val) }, attr: {disabled: $parent.page() == val ? true : false}, text: val"></a>
        </div>
        
        <div class="btn-group">
            <a class="btn btn-custom" data-bind="click: function () { page(page()+1) }, attr: {disabled: page() == maxPage() ? true : false}"><span class="glyphicon glyphicon-triangle-right"></span></a>
            <a class="btn btn-custom" data-bind="click: function () { page(maxPage()) }, attr: {disabled: page() == maxPage() ? true : false}"><span class="glyphicon glyphicon-step-forward"></span></a>
        </div>
    </div>
</div>
    </div>
    </div>


<script>
var cogroup = new KO_Cogroup(<%- JSON.stringify(cogroup) %>);
var co_name = '<%= cogroup.name %>';
addCompanyNavButtons(co_name);
var _csrf = '<%= _csrf %>';
    
    
function PageModel() {
    var self = this;
    
    self.page = ko.observable(1);
    self.limit = ko.observable(18);
    self.maxPage = ko.observable(1);
    
    self.availablePages = ko.observableArray();
    self.orders = ko.observableArray();
    
    self.toggleActive = function(order) {
        order.is_open(!order.is_open());
        self.ordersUpdate(order);
    }
    
    self.ordersUpdate = function (order) {
        var params = {
            _csrf: _csrf, 
            id: co_name,
            order: order
        };
        var cb = function (response) {
            if (response.is_open !== order.is_open()) {
                order.is_open(!order.is_open());
            }
        };
        post('/order/merge', params, cb);
    };
    
    self.removeOrder = function (order) {
        var params = {
            _csrf: _csrf, 
            co_name: co_name,
            order: order
        };
        var cb = function (response) {
//            console.log('REMOVE', response);
            if (response.status === 500) {
                alert(response.raw.code);
            } else {
                self.orders.remove(order);
                self.loadOrders(); // Refresh list so that it is full.
            }
        };
        post('/database/destroy/order', params, cb);
    };
    
    self.loadOrders = function () {
        var params = {
            _csrf: _csrf,
            group: co_name,
            page: Number(self.page()),
            limit: Number(self.limit())
        };
        var cb = function (response) {
            self.orders.removeAll();
            for (var i=0; i<response.length; i++) {
//                console.log(response[i]);
                self.orders.push(new KO_PurchaseOrder(response[i].MPN, response[i]));
            }
        };
        post('/database/get/orders', params, cb);
    };    
    
    /**
     * Set `maxPage` onload and when `limit` is changed.
     * 
     * Requests a count of orders from database and sets maxPage value.
     */
    ko.computed(function () {
        var limit = self.limit(); //<- Activate computed call
        
        var params = {
            _csrf: _csrf,
            co_name: co_name
        };
        var cb = function (response) {
            console.log('COUNT:', response);
            self.maxPage(Math.ceil(response.count / limit));
        };
        post('/database/count/orders', params, cb);
    });
    
    /**
     * Set `availablePages` list of page numbers when `maxPage` or `page`
     * are changed.
     */
    ko.computed(function () {
        var page = self.page(), //<- Activate computed call
            maxPage = self.maxPage();
        
        self.availablePages.removeAll();
        for (var i=Math.max(page-3,1); ; i++) {
            if (i <= maxPage && self.availablePages().length < 7) {
                self.availablePages.push({val:i});
            } else break;
        }
        self.loadOrders();
    });
    
}

ko.applyBindings(new PageModel(), document.getElementById("thisPage"));
</script>