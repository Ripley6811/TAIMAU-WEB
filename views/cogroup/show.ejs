<!--Table views of a single company's branches, contacts and products-->

<div id="thisPage" class="container-fluid">
    
    
<!--vvv START: Company header and buttons vvv-->
<%- partial ('../company_header.ejs') %>
<!--^^^ END: Company header and buttons ^^^-->
        
<!--SHOW DELETE BUTTON IF THERE ARE NO BRANCHES-->
   <% if (cogroup.branches.length == 0) { %>
    <div class="row text-center">
        <a href="/cogroup/destroy/<%= cogroup.name %>" class="btn btn-danger btn-lg">DELETE COMPANY GROUP ID</a>
    </div>
    <% } %>
    
    
    
	<hr>
<!--COMPANY BRANCHES LIST-->
<%- partial ('../branch/panel.ejs') %>
    
    
    
    <hr>
<!--CONTACTS LIST-->
<%- partial ('../contact/panel.ejs') %>
    
    
    <hr>
<!--PRODUCT AND SERVICES LIST-->
<%- partial ('../product/panel.ejs') %>
    
    
</div>

<script>
//var cogroup = new KO_Cogroup(<%- JSON.stringify(cogroup) %>);
//var co_name = '<%= cogroup.name %>';
//addCompanyNavButtons(co_name);
//var _csrf = '<%= _csrf %>';
                             
    
function PageModel() {
    var self = this;
//    
//    // Branch name options for select list.
//    self.branchOptions = ko.observableArray();
//    
//    
//    
//    /**
//     * BRANCH section controls
//     * 
//     * 
//     */
//    self.branches = ko.observableArray();
//    self.addBranch = function() {
//        var newBranch = new KO_Branch();
//        newBranch.group(co_name);
//        newBranch.nameLock(false);
//        newBranch.saved(false);
//        self.branches.push(newBranch);
//    };
//    self.removeBranch = function(branch) {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    branch.name(null);
//                    branch.saved(false);
//                    self.branches.remove(branch);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/branch/destroy', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            name: branch.name
//        }));
//    };
//    
//    self.saveBranch = function(branch) {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    branch.name(response.name);
//                    branch.saved(true);
//                    branch.nameLock(true);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/branch/updateOrCreate', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            branch: branch
//        }));
//    };
//    
//    self.getBranches = function () {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState !== 4) return;
//            
//            var db_branches = JSON.parse(xmlhttp.response);
//            
//            self.branches.removeAll();
//            self.branchOptions.removeAll();
//            for (var i=0; i<db_branches.length; i++) {
//                self.branches.push(new KO_Branch(db_branches[i]));
//                self.branchOptions.push(db_branches[i].name);
//            }
//            // Refresh Contacts so that the correct branch is set.
////            self.getContacts();
//        };
//        xmlhttp.open('POST', '/database/get/branches', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            id: co_name
//        }));
//    };
//    
//    
//    self.getBranches();
//    
    
    
    
//    
//    /**
//     * CONTACT section controls
//     * 
//     * 
//     */
//    // Save button text
//    self.contacts = ko.observableArray();
//    self.addContact = function() {
//        var newContact = new KO_Contact();
//        newContact.group(co_name);
//        self.contacts.push(newContact);
//    };
//    self.removeContact = function(contact) {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    contact.id(null);
//                    contact.saved(false);
//                    // Optionally remove contact from view.
////                    self.contacts.remove(contact);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/contact/destroy', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            id: contact.id
//        }));
//    };
//    
//    self.saveContact = function(contact) {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    contact.id(response.id);
//                    contact.saved(true);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/contact/updateOrCreate', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            contact: contact
//        }));
//    };
//    
//    self.getContacts = function () {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState !== 4) return;
//            
//            var db_contacts = JSON.parse(xmlhttp.response);
//            
//            self.contacts.removeAll();
//            for (var i=0; i<db_contacts.length; i++) {
//                self.contacts.push(new KO_Contact(db_contacts[i]));
//            }
//        };
//        xmlhttp.open('POST', '/database/get/contacts', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            id: co_name
//        }));
//    };
//    
//    self.getContacts();
    
//    
//    
//    /**
//     * PRODUCT section controls
//     * 
//     * 
//     */
//    self.products = ko.observableArray();
//    self.productsAllSaved = ko.computed(function () {
//        for (var i=0; i<self.products().length; i++) {
//            if (self.products()[i].saved() === false) return false;
//        }
//        return true;
//    });
//    self.toggleActive = function(product) {
//        product.discontinued(!product.discontinued());
//        
//        var index = self.products().indexOf(product);
//        self.productsUpdate(self.products.slice(index, index+1));
//    }
//    self.addProduct = function() {
//        var newProduct = new KO_Product();
//        newProduct.group(co_name);
//        newProduct.locked(false);
//        newProduct.saved(false);
//        newProduct.json().rank = self.products().length; // Set as last item.
//        self.products.push(newProduct);
//    };
//    self.removeProduct= function(product) {
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    product.MPN(null);
//                    product.saved(false);
//                    self.products.remove(product);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/product/destroy', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            MPN: product.MPN
//        }));
//    };
//    
//    self.saveProduct = function(product) {
//        console.log('SAVEPRODUCT', co_name, ko.toJSON(product));
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
//                var response = JSON.parse(xmlhttp.response);
//                console.log(typeof response, response);
//                if (response.status !== 400 && response.group === co_name) {
//                    product.MPN(response.MPN);
//                    product.saved(true);
//                    product.locked(true);
//                } else {
//                    alert(JSON.stringify(response, null, '  '));
//                }
//            }
//        };
//        xmlhttp.open('POST', '/product/updateOrCreate', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            co_name: co_name, 
//            product: product
//        }));
//    };
//    
//    self.productsGet = function () {
//        params = {
//            _csrf: _csrf, 
//            id: co_name,
//        };
//        callback = function (products) {
//            self.products.removeAll();
//            for (var i=0; i<products.length; i++) {
//                self.products.push(new KO_Product(products[i]));
//            }
//        };
//        getProducts(params, callback);
//    };
//    
//    self.productsGet();
//    
//    // Sort products by rank value (in json data).
//    self.productsSort = function () {
//        self.products.sort(function (a, b) {
//            return a.json().rank - b.json().rank;
//        });
//    }
//    
//    self.productUpOne = function (prod) {
//        var index = self.products().indexOf(prod);
//        if (index > 0) {
//            var temp = self.products()[index].json().rank;
//            self.products()[index].json().rank = self.products()[index-1].json().rank;
//            self.products()[index-1].json().rank = temp;
//        }
//        self.productsSort();
//        self.productsUpdate(self.products.slice(index-1, index+1));
//    };
//    self.productDownOne = function (prod) {
//        var index = self.products().indexOf(prod);
//        if (index < self.products().length-1) {
//            var temp = self.products()[index].json().rank;
//            self.products()[index].json().rank = self.products()[index+1].json().rank;
//            self.products()[index+1].json().rank = temp;
//        }
//        self.productsSort();
//        self.productsUpdate(self.products.slice(index, index+2));
//    };
//    
//    self.productsUpdate = function (prods) {
//        // Verify product rank numbers and update all products if incorrect.
//        for (var i=0; i<self.products().length; i++) {
//            if (self.products()[i].json().rank !== i) {
//                prods = self.products;
//                self.products()[i].json().rank = i;
//            }
//        }
//        
//        var xmlhttp = new XMLHttpRequest();
//        xmlhttp.onreadystatechange = function() {
//            if (xmlhttp.readyState !== 4) return;
//            
//        };
//        xmlhttp.open('POST', '/product/merge', true);
//        xmlhttp.setRequestHeader('Content-type', 'application/json');
//        xmlhttp.send(ko.toJSON({
//            _csrf: _csrf, 
//            id: co_name,
//            products: prods
//        }));
//    };
}

//ko.applyBindings(new PageModel(), document.getElementById('thisPage'));
</script>